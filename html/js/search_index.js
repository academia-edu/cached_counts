var search_data = {"index":{"searchIndex":["cachedcounts","railtie","add_association_counting_hooks()","add_count_attribute_methods()","add_counting_hooks()","add_scope_counting_hooks()","association_count_key()","caches_count_of()","caches_count_of!()","caches_count_where()","caches_count_where!()","connection_for()","default_race_condition_fallback_proc()","define_association_count_attribute()","define_scope_count_attribute()","generate_association_counting_hook_key_getter()","generate_association_relation_getter()","scope_count_key()","readme"],"longSearchIndex":["cachedcounts","cachedcounts::railtie","cachedcounts#add_association_counting_hooks()","cachedcounts#add_count_attribute_methods()","cachedcounts#add_counting_hooks()","cachedcounts#add_scope_counting_hooks()","cachedcounts#association_count_key()","cachedcounts#caches_count_of()","cachedcounts#caches_count_of!()","cachedcounts#caches_count_where()","cachedcounts#caches_count_where!()","cachedcounts::connection_for()","cachedcounts#default_race_condition_fallback_proc()","cachedcounts#define_association_count_attribute()","cachedcounts#define_scope_count_attribute()","cachedcounts#generate_association_counting_hook_key_getter()","cachedcounts#generate_association_relation_getter()","cachedcounts#scope_count_key()",""],"info":[["CachedCounts","","CachedCounts.html","",""],["CachedCounts::Railtie","","CachedCounts/Railtie.html","",""],["add_association_counting_hooks","CachedCounts","CachedCounts.html#method-i-add_association_counting_hooks","(attribute_name, association, options)",""],["add_count_attribute_methods","CachedCounts","CachedCounts.html#method-i-add_count_attribute_methods","(attribute_name, key_getter, relation_getter, define_with, counted_class, options)",""],["add_counting_hooks","CachedCounts","CachedCounts.html#method-i-add_counting_hooks","(attribute_name, key_getter, counted_class, options)",""],["add_scope_counting_hooks","CachedCounts","CachedCounts.html#method-i-add_scope_counting_hooks","(attribute_name, options)",""],["association_count_key","CachedCounts","CachedCounts.html#method-i-association_count_key","(counter_id, attribute_name, version = 1)",""],["caches_count_of","CachedCounts","CachedCounts.html#method-i-caches_count_of","(attribute_name, options = {})","<p>Cache the count for an association in memcached.\n<p>e.g.\n\n<pre>User.caches_count_of :friends\n&gt; User.first.friends_count ...</pre>\n"],["caches_count_of!","CachedCounts","CachedCounts.html#method-i-caches_count_of-21","(attribute_name, options)",""],["caches_count_where","CachedCounts","CachedCounts.html#method-i-caches_count_where","(attribute_name, options = {})","<p>Cache the count for a scope in memcached.\n<p>e.g.\n\n<pre>User.caches_count_where :confirmed\n&gt; User.confirmed_count ...</pre>\n"],["caches_count_where!","CachedCounts","CachedCounts.html#method-i-caches_count_where-21","(attribute_name, options)",""],["connection_for","CachedCounts","CachedCounts.html#method-c-connection_for","(counted_class)",""],["default_race_condition_fallback_proc","CachedCounts","CachedCounts.html#method-i-default_race_condition_fallback_proc","(key, relation, options)",""],["define_association_count_attribute","CachedCounts","CachedCounts.html#method-i-define_association_count_attribute","(attribute_name, association, options)",""],["define_scope_count_attribute","CachedCounts","CachedCounts.html#method-i-define_scope_count_attribute","(attribute_name, relation, options)",""],["generate_association_counting_hook_key_getter","CachedCounts","CachedCounts.html#method-i-generate_association_counting_hook_key_getter","(association, attribute_name, options)",""],["generate_association_relation_getter","CachedCounts","CachedCounts.html#method-i-generate_association_relation_getter","(association, options)",""],["scope_count_key","CachedCounts","CachedCounts.html#method-i-scope_count_key","(attribute_name, version = 1)",""],["README","","README_rdoc.html","","<p>CachedCounts\n<p>A replacement for Rails&#39; counter caches, using memcached.\n<p>Caches counts of models in a â€¦\n"]]}}